name: Generate static and deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./src

      - name: Test with pytest
        run: pytest -svvx .
        working-directory: ./src

      - name: Generate static
        run: python generate.py release
        working-directory: ./src

      - name: Deploy to Server
        run: |
          SITE_ID="${{ secrets.SITE_ID }}"
          RELEASE_ID=`date '+%s'`
          tar cvzf "$SITE_ID-$RELEASE_ID.tar.gz" --exclude="./$SITE_ID-$RELEASE_ID.tar.gz" .
          echo "${{ secrets.KEY }}" > deployer_id_rsa
          chmod 400 deployer_id_rsa
          scp -v -i deployer_id_rsa -o StrictHostKeyChecking=no -P ${{ secrets.PORT }} "./$SITE_ID-$RELEASE_ID.tar.gz" ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/releases/
          ssh -v -i deployer_id_rsa -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir ~/releases/$SITE_ID-$RELEASE_ID && tar xvf ~/releases/$SITE_ID-$RELEASE_ID.tar.gz -C ~/releases/$SITE_ID-$RELEASE_ID && cp -ru ~/releases/$SITE_ID-$RELEASE_ID ~/www/$SITE_ID && rm -r ~/releases/$SITE_ID-$RELEASE_ID"
        working-directory: ./out